<controls:WindowBase x:Class="PlayniteUI.GameEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:pui="clr-namespace:PlayniteUI"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:playnite="clr-namespace:Playnite;assembly=Playnite"
        xmlns:models="clr-namespace:Playnite.Models;assembly=Playnite"
        xmlns:controls="clr-namespace:PlayniteUI.Controls"
        mc:Ignorable="d"                     
        d:DesignStyle="{StaticResource WindowDesignStyle}"
        Style="{DynamicResource StandardWindowStyle}"
        Title="Edit Game Details"
        Height="650" Width="800"
        WindowStartupLocation="CenterOwner"
        x:Name="mainWindow" Loaded="Window_Loaded"
        AutomationProperties.AutomationId="WindowGameEdit">

    <controls:WindowBase.Resources>
        <pui:ListToStringConverter x:Key="ListToStringConverter" />
        <pui:LiteDBImageToImageConverter x:Key="LiteDBImageToImageConverter" />
        <pui:NullableDateToStringConverter x:Key="NullableDateToStringConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <pui:InvertableBooleanToVisibilityConverter x:Key="InvertableBooleanToVisibilityConverter" />
        <pui:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <pui:NegateConverter x:Key="NegateConverter" />
        <pui:ValueConverterGroup x:Key="EnumCompVisibilityConverterInverted">
            <pui:EnumConverter/>
            <pui:NegateConverter/>
            <BooleanToVisibilityConverter/>
        </pui:ValueConverterGroup>
        <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}" />
    </controls:WindowBase.Resources>


    <Grid Margin="0,5,0,0" IsEnabled="{Binding ProgressVisible, Converter={StaticResource NegateConverter}}">
        <Grid.Resources>
            <pui:BindingProxy x:Key="Proxy" Data="{Binding}" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TabControl Name="TabControlMain" DockPanel.Dock="Top" Grid.Column="0" Grid.Row="0">
            <TabItem Header="General">
                <Grid Grid.Column="0" Grid.Row="0" Margin="10">
                    <Grid.Resources>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}" >
                            <Setter Property="Margin" Value="3" />
                        </Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}" >
                            <Setter Property="Margin" Value="3" />
                        </Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}" >
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" >
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- ID -->
                    <TextBlock Text="Id" Grid.Column="0" Grid.Row="0"
                                Visibility="{Binding Source={x:Static playnite:Constants.IsDebugBuild}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <TextBox Grid.Column="2" Grid.Row="0" IsReadOnly="True" Text="{Binding EditingGame.ProviderId, Mode=OneTime}"
                             VerticalAlignment="Center"
                                Visibility="{Binding Source={x:Static playnite:Constants.IsDebugBuild}, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <!-- Name -->
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Name"/>
                    <CheckBox Grid.Column="1" Grid.Row="1" Name="CheckName"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UseNameChanges}"/>
                    <TextBox Grid.Column="2" Grid.Row="1" Name="TextName"
                                Text="{Binding EditingGame.Name, UpdateSourceTrigger=PropertyChanged}"/>

                    <!-- Sorting Name -->
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Sorting Name"/>
                    <CheckBox Grid.Column="1" Grid.Row="2" Name="CheckSortingName"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UseSortingNameChanges}"/>
                    <TextBox Grid.Column="2" Grid.Row="2" Name="TextSortingName"
                                Text="{Binding EditingGame.SortingName, UpdateSourceTrigger=PropertyChanged}"/>

                    <!-- Platform -->
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Platform"/>
                    <CheckBox Grid.Column="1" Grid.Row="3" Name="CheckPlatform"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UsePlatformChanges}"/>
                    <ComboBox Grid.Column="2" Grid.Row="3" Name="ComboPlatforms"
                                ItemsSource="{Binding Platforms}"
                                SelectedValuePath="Id" SelectedValue="{Binding EditingGame.PlatformId, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <!-- Genres -->
                    <TextBlock Grid.Column="0" Grid.Row="4" Text="Genre(s)" />
                    <CheckBox Grid.Column="1" Grid.Row="4" Name="CheckGenres"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UseGenresChanges}"/>
                    <TextBox Grid.Column="2" Grid.Row="4" Name="TextGenres"
                                Text="{Binding EditingGame.Genres, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ListToStringConverter}}"/>

                    <!-- Release Date -->
                    <TextBlock Grid.Column="0" Grid.Row="5" Text="Release date"/>
                    <CheckBox Grid.Column="1" Grid.Row="5" Name="CheckReleaseDate"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UseReleaseDateChanges}"/>
                    <DatePicker Grid.Column="2" Grid.Row="5" Margin="3"
                                SelectedDate="{Binding EditingGame.ReleaseDate}"/>

                    <!-- Developers -->
                    <TextBlock Grid.Column="0" Grid.Row="6" Text="Developer(s)"/>
                    <CheckBox Grid.Column="1" Grid.Row="6" Name="CheckDeveloper"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UseDeveloperChanges}"/>
                    <TextBox Grid.Column="2" Grid.Row="6" Name="TextDeveloper"
                                Text="{Binding EditingGame.Developers, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ListToStringConverter}}"/>

                    <!-- Publishers -->
                    <TextBlock Grid.Column="0" Grid.Row="7" Text="Publisher(s)" />
                    <CheckBox Grid.Column="1" Grid.Row="7" Name="CheckPublisher"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UsePublisherChanges, Mode=OneWay}"/>
                    <TextBox Grid.Column="2" Grid.Row="7" Name="TextPublisher"
                                Text="{Binding EditingGame.Publishers, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ListToStringConverter}}"/>

                    <!-- Categories -->
                    <TextBlock Grid.Column="0" Grid.Row="8" Text="Categories" />
                    <CheckBox Grid.Column="1" Grid.Row="8" Name="CheckCategories"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UseCategoryChanges}"/>
                    <DockPanel Grid.Column="2" Grid.Row="8">
                        <Button Name="ButtonPickCat" Content="..."  DockPanel.Dock="Right" Margin="2"
                                Height="{Binding ActualHeight, ElementName=TextCategories}"
                                Command="{Binding SelectCategoryCommand}"/>
                        <TextBox Name="TextCategories" DockPanel.Dock="Left"
                                    Text="{Binding EditingGame.Categories, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ListToStringConverter}}"/>
                    </DockPanel>

                    <!-- Tags -->
                    <TextBlock Grid.Column="0" Grid.Row="9" Text="Tag(s)" />
                    <CheckBox Grid.Column="1" Grid.Row="9" Name="CheckTag"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UseTagChanges, Mode=OneWay}"/>
                    <TextBox Grid.Column="2" Grid.Row="9" Name="TextTag"
                                Text="{Binding EditingGame.Tags, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ListToStringConverter}}"/>

                    <!-- Description -->
                    <TextBlock Grid.Column="0" Grid.Row="10" Text="Description" VerticalAlignment="Top" Margin="0,5,0,0" />
                    <CheckBox Grid.Column="1" Grid.Row="10" Name="CheckDescription" VerticalAlignment="Top" Margin="0,5,0,0"
                                Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsChecked="{Binding UseDescriptionChanges}"/>
                    <TextBox Grid.Column="2" Grid.Row="10" TextWrapping="Wrap" AcceptsReturn="True" Name="TextDescription"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                Text="{Binding EditingGame.Description, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </TabItem>

            <TabItem Header="Media">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Column="0" Grid.Row="0" Header="Icon">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Name="CheckIcon" VerticalAlignment="Center"
                                                  Visibility="{Binding Data.ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Proxy}}"
                                                  IsChecked="{Binding Data.UseIconChanges, Source={StaticResource Proxy}}"/>
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <DockPanel LastChildFill="True">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,5" DockPanel.Dock="Top">
                                <Button Name="ButtonSelectIcon" Content="Select Icon"
                                            Command="{Binding SelectIconCommand}"/>
                                <Button Name="ButtonUseExeIcon" Content=" Use exe's icon " Margin="5,0,0,0"
                                            Command="{Binding UseExeIconCommand}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Games}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                            <Image Source="{Binding EditingGame.Icon, Mode=OneWay, Converter={StaticResource LiteDBImageToImageConverter}}"
                                       Stretch="Uniform" StretchDirection="DownOnly" RenderOptions.BitmapScalingMode="Fant" Name="ImageIcon"
                                       DockPanel.Dock="Top" MaxHeight="64"
                                       AutomationProperties.HelpText="{Binding EditingGame.Icon, TargetNullValue=''}"/>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox Grid.Column="0" Grid.Row="1" Header="Cover Image" Margin="0,5,0,0">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Name="CheckImage" VerticalAlignment="Center"
                                                  Visibility="{Binding Data.ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Proxy}}"
                                                  IsChecked="{Binding Data.UseImageChanges, Source={StaticResource Proxy}}"/>
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <DockPanel LastChildFill="True">
                            <Button Name="ButtonSelectImage" Content="Select Image" DockPanel.Dock="Top"
                                        Margin="0,0,0,5" HorizontalAlignment="Left"
                                        Command="{Binding SelectCoverCommand}"/>
                            <Image Source="{Binding EditingGame.Image, Mode=OneWay, Converter={StaticResource LiteDBImageToImageConverter}}"
                                       Stretch="Uniform" StretchDirection="Both" RenderOptions.BitmapScalingMode="Fant" Name="ImageImage"
                                       DockPanel.Dock="Top"
                                       AutomationProperties.HelpText="{Binding EditingGame.Image, TargetNullValue=''}"/>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                              Header="Background Image" Margin="5,0,0,0">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Name="CheckImage" VerticalAlignment="Center"
                                              Visibility="{Binding Data.ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Proxy}}"
                                              IsChecked="{Binding Data.UseBackgroundChanges, Source={StaticResource Proxy}}"/>
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <DockPanel DockPanel.Dock="Top">
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                                <Button Content="Select File" HorizontalAlignment="Left"
                                        Command="{Binding SelectBackgroundCommand}"/>
                                <Button Content="Select Url" Margin="5,0,0,0" HorizontalAlignment="Left"
                                        Command="{Binding SetBackgroundUrlCommand}"/>
                            </StackPanel>
                            <DockPanel DockPanel.Dock="Top" Margin="5,5,0,5"
                                       Visibility="{Binding ShowBackgroundUrl, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock Text="Image URL" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                                <TextBox IsReadOnly="True" DockPanel.Dock="Left" Margin="5,0,0,0"
                                         Text="{Binding EditingGame.BackgroundImage}" />
                            </DockPanel>
                            <Image Source="{Binding EditingGame.BackgroundImage, Mode=OneWay, Converter={StaticResource LiteDBImageToImageConverter}}"
                                   Stretch="Uniform" StretchDirection="Both" RenderOptions.BitmapScalingMode="Fant"
                                   DockPanel.Dock="Top"
                                   AutomationProperties.HelpText="{Binding EditingGame.Image, TargetNullValue=''}"/>
                        </DockPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            
            <TabItem Header="Links" Name="TabLinks"
                     Visibility="{Binding ShowLinks, Converter={StaticResource BooleanToVisibilityConverter}}">
                <DockPanel>
                    <Button Name="ButtonAddLink" Content="Add Link" HorizontalAlignment="Left" Margin="10,10,0,0"
                            Command="{Binding AddLinkCommand}" DockPanel.Dock="Top"/>
                    <CheckBox Name="CheckLinks" Content="Save Changes" Margin="10,5,5,5" DockPanel.Dock="Top"
                              Visibility="{Binding ShowCheckBoxes, Converter={StaticResource BooleanToVisibilityConverter}}"
                              IsChecked="{Binding UseLinksChanges}" />
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="10" DockPanel.Dock="Top">
                        <StackPanel>
                            <ItemsControl Name="ItemsLinks" Grid.IsSharedSizeScope="True"
                                          ItemsSource="{Binding EditingGame.Links}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="-5,0,-5,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                            </Grid.RowDefinitions>

                                            <TextBox Text="{Binding Name}" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" Margin="5" />
                                            <TextBox Text="{Binding Url}" Grid.Column="1" Grid.Row="0" Margin="5" />
                                            <Button Name="ButtonRemoveLink" Content="Remove" Grid.Column="2" Grid.Row="1"  Margin="5"
                                                    Command="{Binding Data.RemoveLinkCommand,Source={StaticResource Proxy}}"
                                                    CommandParameter="{Binding}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>                
            </TabItem>

            <TabItem Header="Installation" Name="TabInstallation"
                     Visibility="{Binding ShowInstallation, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Installation Directory" Grid.Column="0" Margin="5" VerticalAlignment="Center" />
                    <TextBox Grid.Column="1" Margin="5" Name="TextInstallDir"
                             Text="{Binding EditingGame.InstallDirectory, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="..." Grid.Column="2" Margin="5" Name="ButtonBrowseInstallDir"
                            Command="{Binding SelectInstallDirCommand}"/>
                    <TextBlock Text="Image/ISO Path" Grid.Row="1" Grid.Column="0" Margin="5" VerticalAlignment="Center" />
                    <TextBox Grid.Row="1" Grid.Column="1" Margin="5" Name="TextIso"
                             Text="{Binding EditingGame.IsoPath, UpdateSourceTrigger=PropertyChanged}"  />
                    <Button Content="..." Grid.Row="1" Grid.Column="2" Margin="5" Name="ButtonBrowseIso"
                            Command="{Binding SelectGameImageCommand}"/>
                </Grid>
            </TabItem>

            <TabItem Header="Actions" Name="TabActions"
                     Visibility="{Binding ShowActions, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <GroupBox Header="Play Action" Margin="10">
                            <StackPanel>
                                <Button Name="ButtonAddPlay" Content="Add Play Action" HorizontalAlignment="Left"
                                        Margin="0,5,0,5" Command="{Binding AddPlayActionCommand}">
                                    <Button.Style>                                        
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding EditingGame.PlayTask}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Name="ButtonRemovePlay" Content="Remove Play Action" HorizontalAlignment="Left"
                                        Margin="0,5,0,5" Command="{Binding DeletePlayActionCommand}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding EditingGame.PlayTask}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <pui:GameTaskView x:Name="TaskPlay" DataContext="{Binding EditingGame.PlayTask}"
                                                  Margin="5,0,5,5"
                                                  Visibility="{Binding Data.EditingGame.PlayTask, Converter={StaticResource NullToVisibilityConverter}, Source={StaticResource Proxy}}"
                                                  Emulators="{Binding Data.Emulators, Source={StaticResource Proxy}}"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Other Actions" Margin="10">
                            <StackPanel>
                                <ItemsControl Name="OtherTasksItems" ItemsSource="{Binding EditingGame.OtherTasks}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border BorderThickness="1" BorderBrush="{StaticResource NormalBrush}" CornerRadius="3" Padding="5" Margin="0,0,0,10">
                                                <StackPanel Margin="10">
                                                    <pui:GameTaskView x:Name="TaskCustom" ShowNameRow="True"
                                                                      Emulators="{Binding Data.Emulators, Source={StaticResource Proxy}}"/>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                                                        <Button Name="ButtonMoveUpAction" FontFamily="Marlett" Content="5" Margin="0,0,5,0"
                                                                Command="{Binding Data.MoveUpActionCommand, Source={StaticResource Proxy}}"
                                                                CommandParameter="{Binding }"/>
                                                        <Button Name="ButtonMoveDownAction" FontFamily="Marlett" Content="6" Margin="0,0,5,0"
                                                                Command="{Binding Data.MoveDownActionCommand, Source={StaticResource Proxy}}"
                                                                CommandParameter="{Binding }"/>
                                                        <Button Name="ButtonDeleteAction" Content="Delete Action"
                                                                Command="{Binding Data.DeleteActionCommand, Source={StaticResource Proxy}}"
                                                                CommandParameter="{Binding }"/>
                                                    </StackPanel>
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <Button Name="ButtonAddAction" Content="Add Action" HorizontalAlignment="Left" Margin="0,5,0,5"
                                        Command="{Binding AddActionCommand}"/>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>

        <Border Grid.Column="0" Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{StaticResource NormalBorderBrush}">
            <DockPanel LastChildFill="False" Margin="5">
                <Button Name="ButtonDownload" Content=" Download metadata from..." DockPanel.Dock="Left"
                        Style="{StaticResource BottomButton}"
                        pui:LeftClickContextMenuBehavior.Enabled="True">
                    <Button.ContextMenu>
                        <ContextMenu Placement="Top" Width="{Binding PlacementTarget.ActualWidth, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="IGDB" Command="{Binding DownloadIGDBMetadataCommand}"/>
                            <MenuItem Header="Wiki" Command="{Binding DownloadWikiMetadataCommand}"/>
                            <MenuItem Header="Official Store" Command="{Binding DownloadStoreCommand}"
                                      Visibility="{Binding EditingGame.Provider, Converter={StaticResource EnumCompVisibilityConverterInverted}, ConverterParameter={x:Static models:Provider.Custom}}"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <Button Name="ButtonCancel" Content="{DynamicResource CancelLabel}" DockPanel.Dock="Right" IsCancel="True"
                        Style="{StaticResource BottomButton}"
                        Command="{Binding CancelCommand}"/>
                <Button Name="ButtonOK" Content="Save" DockPanel.Dock="Right"
                        Style="{StaticResource BottomButton}"
                        Command="{Binding ConfirmCommand}"/>
            </DockPanel>
        </Border>

        <Grid Visibility="{Binding ProgressVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ProgressBar IsIndeterminate="True" Width="350" Height="40" />
            <TextBlock Text="Downloading..." HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
    </Grid>
</controls:WindowBase>
